---
blogpost: true
date: 2017-01-11
category: project-6050
---

# Choosing the Brains
Published on 2017-01-11 in {ref}`project-6050`.

In the previous post I shared some of my thoughts about this project,
and decided to pick a different development board than the Pro Mini
that I have been using so far. Don't get me wrong, Pro Mini is great
for all kinds of small and cheap projects, it's just that I want to
make programming this robot as simple as possible. That, among other
things, means using a platform that has a lot of computing power, not
just enough, preferably one that has so much of it, that it can be
used with a high-level language like Python. That also means something
that has a USB socket.


---
The plan is to keep the Tote base PCB for its body, and keep the
ATmega microcontroller on it, but make it only serve as a servo
controller. Then, on top of it, have headers for plugging in the
actual brains, and possibly for stacking additional shields with
sensors and other peripherals. The board would only need connections
for the power and the I2C pins, but since there is no standard for the
pin layout (or, rather, there are lots of standards), I need to choose
one -- history shows that trying to make it flexible and compatible
with many different boards only leads to pain and suffering.

However, I still want this to be relatively cheap. It would be bad if
the brain was more expensive than the ~$20 the legs cost. I first
tried with the D1 Mini board, because it's my favorite ESP8266 board,
it's small and compact, and it has a number of shields for it
available. It's also easy to make new shields for it, and they can be
very small, which makes them cheap on OSHPark. The board can run
MicroPython and has WiFi build in, which makes it easy to use a remote
console to program and debug it very conveniently. There is also a
LiPo shield, which makes it possible to recharge the battery from the
USB. So I spent some hours making this:


:::{image} https://cdn.hackaday.io/images/5545441484170063244.png

:::


The base is just the {ref}`project-13278` 








:::{image} https://cdn.hackaday.io/images/7757741484170897474.png

:::











:::{image} https://cdn.hackaday.io/images/8821021484171642513.png

:::













:::{image} https://cdn.hackaday.io/images/4663631484172769261.png

:::
\










