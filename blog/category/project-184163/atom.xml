<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>http://deshipu.art/</id>
  <title>deshipu.art - Posts in project-184163</title>
  <updated>2024-08-07T20:45:04.682146+00:00</updated>
  <link href="http://deshipu.art/"/>
  <link href="http://deshipu.art/blog/category/project-184163/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.33">ABlog</generator>
  <entry>
    <id>http://deshipu.art/projects/project-184163/log-203681/</id>
    <title>Wired Mode</title>
    <updated>2022-03-03T00:00:00+01:00</updated>
    <content type="html">&lt;section id="wired-mode"&gt;

&lt;p&gt;Published on 2022-03-03 in &lt;span class="xref std std-ref"&gt;project-184163&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For starters, I decided to do something I already have well rehearsed:
a wired keyboard. There is already support for the TinyS3 in
CircuitPython, so I thought it would be easy. Just use my ukeeb
library, with the small modification for UART communication between
the halves, and I’m done. Well, not quite.&lt;/p&gt;
&lt;img alt="projects/project-184163/images/5508811646300725818.jpg" src="projects/project-184163/images/5508811646300725818.jpg" /&gt;
&lt;p&gt;I got the first half to work pretty quickly — the only snag was that I
didn’t rotate the diodes when I moved them to the other side of the
PCB, so now they were all in the wrong direction — but that is easily
fixed in software. Then I moved on to get the other half to work, and
that’s where I wasted several hours of debugging time before giving up
for a week. Long story short, the UART communication was broken on the
ESP32-S3 with that version of CircuitPython, and I basically received
random bytes. I gave the project a pause, and today, I flashed version
7.2.0, which seems to have this issue solved (I just had to add
clearing the input buffer).&lt;/p&gt;
&lt;p&gt;So I have a working keyboard now. One more modification I had to do is
adding a sleep in the main loop, to limit the polling speed — without
that the chip was getting noticeably warm.&lt;/p&gt;
&lt;p&gt;Now, about wireless. While there is some basic BLE support in
CircuitPython for this chip right now, the services are not
implemented yet. And I need services for the HID. However, I decided
to be lazy and just take my time and wait for this to be implemented
by people who know what they are doing (hopefully), instead of rushing
head-first myself. So there is going to be another pause here.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-184163/log-203681/" rel="alternate"/>
    <summary>Published on 2022-03-03 in project-184163.</summary>
    <published>2022-03-03T00:00:00+01:00</published>
  </entry>
</feed>
