<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>http://deshipu.art/</id>
  <title>deshipu.art - Posts in project-165011</title>
  <updated>2024-08-07T20:33:02.324233+00:00</updated>
  <link href="http://deshipu.art/"/>
  <link href="http://deshipu.art/blog/category/project-165011/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.33">ABlog</generator>
  <entry>
    <id>http://deshipu.art/projects/project-165011/log-170480/</id>
    <title>Lost in Time and Space</title>
    <updated>2019-11-01T00:00:00+01:00</updated>
    <content type="html">&lt;section id="lost-in-time-and-space"&gt;

&lt;p&gt;Published on 2019-11-01 in &lt;a class="reference internal" href="../../../projects/project-165011/#project-165011"&gt;&lt;span class="std std-ref"&gt;Gesture FeatherWing&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I started this project quite a while ago, and it was an unlucky one —
always when the parts arrived, I was in a bit of slump, busy with some
urgent thing, travelling, or just simply burned out. So the progress
was slow, and I only took it as far as assembling and soldering the
whole thing — I didn’t have the energy to actually write the software
to test it.&lt;/p&gt;
&lt;p&gt;And now I’m bringing it back from the dead, so to speak, to enter it
in this contest, but… I can’t find it. I clearly remember assembling
the prototype, but it’s not anywhere in my drawers or boxes. I found
the un-assembled PCBs, so I could get another chip and start again,
but I would much prefer not having to do that.&lt;/p&gt;
&lt;p&gt;I guess I will need to do a proper cleanup of my workspace.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-165011/log-170480/" rel="alternate"/>
    <summary>Published on 2019-11-01 in project-165011.</summary>
    <published>2019-11-01T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-165011/log-170479/</id>
    <title>PCB Design</title>
    <updated>2019-11-01T00:00:00+01:00</updated>
    <content type="html">&lt;section id="pcb-design"&gt;

&lt;p&gt;Published on 2019-11-01 in &lt;a class="reference internal" href="../../../projects/project-165011/#project-165011"&gt;&lt;span class="std std-ref"&gt;Gesture FeatherWing&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To avoid paying extra for two PCB designs, both layers of the sandwich
are connected at the corner — they have to be cut manually for
assembly.&lt;/p&gt;
&lt;img alt="projects/project-165011/images/4985981572637754949.png" src="projects/project-165011/images/4985981572637754949.png" /&gt;
&lt;p&gt;The design above has the copper fills removed for clarity. The antenna
pretty much follows the recommendations from the datasheet. The traces
going to it are kept as short as possible.&lt;/p&gt;
&lt;p&gt;To avoid puncturing the ground layer, the connector for the Feather is
made out of an angled male header, soldered SMD-style to the board. In
a final design, a proper SMD header could be used instead.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-165011/log-170479/" rel="alternate"/>
    <summary>Published on 2019-11-01 in project-165011.</summary>
    <published>2019-11-01T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-165011/log-170534/</id>
    <title>Discretes and Schematic</title>
    <updated>2019-11-02T00:00:00+01:00</updated>
    <content type="html">&lt;section id="discretes-and-schematic"&gt;

&lt;p&gt;Published on 2019-11-02 in &lt;a class="reference internal" href="../../../projects/project-165011/#project-165011"&gt;&lt;span class="std std-ref"&gt;Gesture FeatherWing&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I populated the rest of the shield, and its seems to work — at least
it shows up on the I2C bus. Further testing will require writing a
library for it.&lt;/p&gt;
&lt;p&gt;I also fixed the schematic view, so that it can actually be
understood. This is something I like about Fritzing — you can do the
schematic later.&lt;/p&gt;
&lt;img alt="projects/project-165011/images/1725401572728148470.png" src="projects/project-165011/images/1725401572728148470.png" /&gt;
&lt;p&gt;While making the schematic, I also discovered that the version of PCB
I have misses one connection (for the I2C address selection
resistors), so I will need to bodge that in the prototype. The final
version has that fixed.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-165011/log-170534/" rel="alternate"/>
    <summary>Published on 2019-11-02 in project-165011.</summary>
    <published>2019-11-02T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-165011/log-170523/</id>
    <title>Redoing It</title>
    <updated>2019-11-02T00:00:00+01:00</updated>
    <content type="html">&lt;section id="redoing-it"&gt;

&lt;p&gt;Published on 2019-11-02 in &lt;a class="reference internal" href="../../../projects/project-165011/#project-165011"&gt;&lt;span class="std std-ref"&gt;Gesture FeatherWing&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I figured that as soon as I start working on it again, I will find the
old prototype. It didn’t work, but I did find the chips I had ordered
for it, so I can just make a new one.&lt;/p&gt;
&lt;img alt="projects/project-165011/images/4265071572692270607.JPG" src="projects/project-165011/images/4265071572692270607.JPG" /&gt;
&lt;p&gt;There are two tricky parts to the mechanical assembly, first is the
FeatherWing header:\&lt;/p&gt;
&lt;img alt="projects/project-165011/images/3694891572692312584.JPG" src="projects/project-165011/images/3694891572692312584.JPG" /&gt;
&lt;p&gt;I’m using a feather to get the right spacing and alignment, ad then
just soldering the angled headers to the pads. Finished, it looks like
this:&lt;/p&gt;
&lt;img alt="projects/project-165011/images/7340701572692381428.JPG" src="projects/project-165011/images/7340701572692381428.JPG" /&gt;
&lt;p&gt;I had to cut some of them shorter, where the pull-up resistors for the
I2C go. The current version of the PCB has that fixed, as the
resistors are moved to the other side of the header.&lt;/p&gt;
&lt;p&gt;Next are the pins that connect the antenna to the main board:&lt;/p&gt;
&lt;img alt="projects/project-165011/images/4346741572692461836.JPG" src="projects/project-165011/images/4346741572692461836.JPG" /&gt;
&lt;p&gt;It takes some re-heating and aligning them to fit them in their holes,
but the end result looks good:&lt;/p&gt;
&lt;img alt="projects/project-165011/images/8910931572692519606.JPG" src="projects/project-165011/images/8910931572692519606.JPG" /&gt;
&lt;p&gt;Next comes the chip itself:&lt;/p&gt;
&lt;img alt="projects/project-165011/images/2560541572692576782.JPG" src="projects/project-165011/images/2560541572692576782.JPG" /&gt;
&lt;p&gt;Now I need to check the values of all the discrete components in the
datasheet and solder them, and it will be ready for testing. That will
probably happen in a week from now, because I will be travelling, and
I can’t take it with me.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-165011/log-170523/" rel="alternate"/>
    <summary>Published on 2019-11-02 in project-165011.</summary>
    <published>2019-11-02T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-165011/log-172503/</id>
    <title>Library</title>
    <updated>2019-12-31T00:00:00+01:00</updated>
    <content type="html">&lt;section id="library"&gt;

&lt;p&gt;Published on 2019-12-31 in &lt;a class="reference internal" href="../../../projects/project-165011/#project-165011"&gt;&lt;span class="std std-ref"&gt;Gesture FeatherWing&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Today I decided to try and write a CircuitPython library for this
sensor. So with a datasheet in hand I started with this simple code
that is supposed to give me the raw data frames:&lt;/p&gt;
&lt;div class="highlight-python notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;board&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;digitalio&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MGC3030&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i2c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mh"&gt;0x43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ts_pin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;i2c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i2c&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ts_pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts_pin&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytearray&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;i2c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;try_lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;i2c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readfrom_into&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;i2c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unlock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;


&lt;span class="n"&gt;i2c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;I2C&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ts_pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digitalio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DigitalInOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;D5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;irq1_pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digitalio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DigitalInOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;D6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;irq0_pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digitalio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DigitalInOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MGC3030&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i2c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sensor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The code works, except it shows me all 0s. What’s wrong?&lt;/p&gt;
&lt;p&gt;Some more careful reading of the datasheet reveals that the chip is
sold without firmware on it. You have to program it yourself, using
attached software. The software is of course WIndows-only, so no way I
can use it.&lt;/p&gt;
&lt;p&gt;Way to go Microchip! \&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-165011/log-172503/" rel="alternate"/>
    <summary>Published on 2019-12-31 in project-165011.</summary>
    <published>2019-12-31T00:00:00+01:00</published>
  </entry>
</feed>
