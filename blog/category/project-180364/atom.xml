<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>http://deshipu.art/</id>
  <title>deshipu.art - Posts in project-180364</title>
  <updated>2024-08-07T20:37:30.914747+00:00</updated>
  <link href="http://deshipu.art/"/>
  <link href="http://deshipu.art/blog/category/project-180364/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.33">ABlog</generator>
  <entry>
    <id>http://deshipu.art/projects/project-180364/log-194240/</id>
    <title>Continuing from Previous Project</title>
    <updated>2021-06-14T00:00:00+02:00</updated>
    <content type="html">&lt;section id="continuing-from-previous-project"&gt;

&lt;p&gt;Published on 2021-06-14 in &lt;a class="reference internal" href="../../../projects/project-180364/#project-180364"&gt;&lt;span class="std std-ref"&gt;Gif Pendant&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I haven’t touched the &lt;a class="reference internal" href="../../../projects/project-158701/#project-158701"&gt;&lt;span class="std std-ref"&gt;Video Pendant&lt;/span&gt;&lt;/a&gt; project in a while, but I think it’s really time to resurrect it now.
CircuitPython has grown a lot in this time, and I also wrote a library
that reads GIF files in Python, so there is much that can be improved
on the software side.&lt;/p&gt;
&lt;p&gt;On the hardware side, I’m going to continue where I left off. I will
use the new configuration, with the screen on one end, and the battery
holder worn on your back, under the shirt:&lt;/p&gt;
&lt;img alt="projects/project-180364/images/5858851623676536271.jpg" src="projects/project-180364/images/5858851623676536271.jpg" /&gt;
&lt;p&gt;This allows the pendant itself to be much smaller, and the battery to
be much larger. I will probably switch to a pair of regular alkaline
AAA batteries, instead of rechargeable LiPO. They are safer and much
easier to get. Also, I don’t need to ship them with the device.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-180364/log-194240/" rel="alternate"/>
    <summary>Published on 2021-06-14 in project-180364.</summary>
    <published>2021-06-14T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-180364/log-194242/</id>
    <title>Reading GIFs in CircuitPython</title>
    <updated>2021-06-14T00:00:00+02:00</updated>
    <content type="html">&lt;section id="reading-gifs-in-circuitpython"&gt;

&lt;p&gt;Published on 2021-06-14 in &lt;a class="reference internal" href="../../../projects/project-180364/#project-180364"&gt;&lt;span class="std std-ref"&gt;Gif Pendant&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is not advertised very much, but CircuitPython can now load GIF
files using the Adafruit’s Image Load library — I have added GIF
support to it a while ago, based on the example code a wrote here:  &lt;a class="reference external" href="https://github.com/deshipu/circuitpython-gif"&gt;https://github.com/deshipu/circuitpython-gif&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, there is one small technicality: that library doesn’t handle
animated GIFs.&lt;/p&gt;
&lt;p&gt;An animaterd GIF image actually contains multiple images inside, each
representing one frame of the animation. They can contain the whole
frame, or just the differences from the previous frame, with
everything else transparent.&lt;/p&gt;
&lt;p&gt;I will need to modify my code to make it read one frame at a time —
the SAMD21 microcontroller I’m using probably doesn’t have enough
memory to read all the frames at once. Hopefully the code will be fast
enough to animate the image reasonably well.&lt;/p&gt;
&lt;p&gt;If that fails, I might need to include a library written in C to read
and display the animations.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-180364/log-194242/" rel="alternate"/>
    <summary>Published on 2021-06-14 in project-180364.</summary>
    <published>2021-06-14T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-180364/log-194241/</id>
    <title>The Screen</title>
    <updated>2021-06-14T00:00:00+02:00</updated>
    <content type="html">&lt;section id="the-screen"&gt;

&lt;p&gt;Published on 2021-06-14 in &lt;a class="reference internal" href="../../../projects/project-180364/#project-180364"&gt;&lt;span class="std std-ref"&gt;Gif Pendant&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I’m still using the same tiny ST7735 color TFT screen, with a new PCB
added to the back of it, containing just the microcontroller and a
micro-USB socket made of the PCB itself — to make the whole thing as
thin as possible. I will probably need to cast it in resin eventually,
so it’s a sturdy, one-piece thing. For now, for ease of debugging, I’m
keeping it separate.&lt;/p&gt;
&lt;img alt="projects/project-180364/images/6385221623676797318.jpg" src="projects/project-180364/images/6385221623676797318.jpg" /&gt;
&lt;p&gt;I will need to make at least one more version of that PCB, to include
touch pads for switching the image on the pendant.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-180364/log-194241/" rel="alternate"/>
    <summary>Published on 2021-06-14 in project-180364.</summary>
    <published>2021-06-14T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-180364/log-198425/</id>
    <title>Some Progress</title>
    <updated>2021-10-01T00:00:00+02:00</updated>
    <content type="html">&lt;section id="some-progress"&gt;

&lt;p&gt;Published on 2021-10-01 in &lt;a class="reference internal" href="../../../projects/project-180364/#project-180364"&gt;&lt;span class="std std-ref"&gt;Gif Pendant&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I had a friend visiting over the weekend, and they were interested in
this project, so we sat down together and made some progress with it.
I assembled a second unit, flashed the usual bootloader to it, and
started to work on the CircuitPython firmware with the displayio
library included.&lt;/p&gt;
&lt;p&gt;Right away I ran into a stumbling block: displayio is too large to fit
on the SAMD21 flash by default, even with all the unneeded modules
disabled. Fortunately I had a similar problem with &lt;a class="reference internal" href="../../../projects/project-180309/#project-180309"&gt;&lt;span class="std std-ref"&gt;PewPew OLED&lt;/span&gt;&lt;/a&gt; before, and I knew that reducing the size of the filesystem from 64kB
to 48kB solves that problem.&lt;/p&gt;
&lt;p&gt;Next problem took us some more time to resolve. I copied the display
initialization code from &lt;a class="reference internal" href="../../../projects/project-165032/#project-165032"&gt;&lt;span class="std std-ref"&gt;PewPew M4&lt;/span&gt;&lt;/a&gt; , since both displays use the same ST7735, they just differ in size.
But on the pendant this code was crashing the whole firmware. It took
me some time to figure out that the PA10 pin I used as MOSI for the
display can’t in fact be used as MOSI, despite what my notes say.
Instead, pin PA11 should be used. So we cut the trace, bodged the
connection to one pin to the right, and this time got working
firmware. But unfortunately with non-working display still.&lt;/p&gt;
&lt;p&gt;Two days later I finally figured out what was wrong. I typed the value
I was writing to MADCTL register as binary value, with “0b” at the
beginning, but I forgot this is C, not Python, and that means
something else. After writing that in hex with “0x” the display
magically started working:&lt;/p&gt;
&lt;img alt="projects/project-180364/images/1959431633121279247.jpg" src="projects/project-180364/images/1959431633121279247.jpg" /&gt;
&lt;p&gt;The next step is to write the code for decoding GIF images. I already
have &lt;a class="reference external" href="https://github.com/deshipu/circuitpython-gif"&gt;working code for CircuitPython&lt;/a&gt; , so I tried that. Unfortunately (but predictably), I ran out of
memory. So next, I need to figure a way of sending the data straight
to the display, without buffering it first in RAM. I might need to use
a C library for reading that GIF file for this, we will see.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-180364/log-198425/" rel="alternate"/>
    <summary>Published on 2021-10-01 in project-180364.</summary>
    <published>2021-10-01T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-180364/log-223063/</id>
    <title>Goodbye</title>
    <updated>2023-09-11T00:00:00+02:00</updated>
    <content type="html">&lt;section id="goodbye"&gt;

&lt;p&gt;Published on 2023-09-11 in &lt;a class="reference internal" href="../../../projects/project-180364/#project-180364"&gt;&lt;span class="std std-ref"&gt;Gif Pendant&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As I already wrote at &lt;a class="reference internal" href="../../../projects/project-158701/#project-158701"&gt;&lt;span class="std std-ref"&gt;Video Pendant&lt;/span&gt;&lt;/a&gt; , it’s time to end this project. While I still think it should be
possible to make animated GIF images displayed with this hardware, I
simply don’t have the energy to write the kind of optimized code that
would be needed, and in the meantime there are much more powerful
microcontrollers out there that can do it without a problem and as
cheaply. So I’m shelving this.&lt;/p&gt;
&lt;p&gt;I might revisit the idea in the future, but it will probably be with a
different display and definitely with a different microcontroller.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-180364/log-223063/" rel="alternate"/>
    <summary>Published on 2023-09-11 in project-180364.</summary>
    <published>2023-09-11T00:00:00+02:00</published>
  </entry>
</feed>
