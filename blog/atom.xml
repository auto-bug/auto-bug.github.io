<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>http://deshipu.art/</id>
  <title>deshipu.art</title>
  <updated>2024-08-07T21:30:39.877185+00:00</updated>
  <link href="http://deshipu.art/"/>
  <link href="http://deshipu.art/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.33">ABlog</generator>
  <entry>
    <id>http://deshipu.art/projects/project-191383/log-230608/</id>
    <title>Version Two</title>
    <updated>2024-06-20T00:00:00+02:00</updated>
    <content type="html">&lt;section id="version-two"&gt;

&lt;p&gt;Published on 2024-06-20 in &lt;a class="reference internal" href="../projects/project-191383/#project-191383"&gt;&lt;span class="std std-ref"&gt;Bigbug&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The robot was built to see if it would work, and I have to say that it
worked pretty well so far. However, after taking it to several
different events, I now have some ideas about how to improve it for
such events specifically.&lt;/p&gt;
&lt;p&gt;The main problem I have is that the robot is really to slow to walk
around with it. As such, it’s mostly spending its time on the time,
waiting to be switched on for a few steps to show to the passing
people, and switched off before it falls off the table. Its size is
also a bit awkward. It’s too big to really do anything useful on the
table, but too small to be safe from being trampled on the floor.&lt;/p&gt;
&lt;p&gt;So now I want to build a second version, using faster servos and
longer legs. That should solve both the problems. I also want to try
and make the body look less like a bunch of duct-taped garbage, but
that’s a secondary consideration.&lt;/p&gt;
&lt;p&gt;I already have the servos for the second version. I went with the JX
PDI-6208MG, mostly because they are roughly the same size as the MG995
I used in the first version, but should be about twice as fast. I also
got some aluminium cases to see if I can use them as the body. One
such case seems to be particularly suitable, so I went ahead and cut
some holes in it to mount the servos:&lt;/p&gt;
&lt;img alt="projects/project-191383/images/970631718834962094.JPG" src="projects/project-191383/images/970631718834962094.JPG" /&gt;
&lt;p&gt;Cutting thick aluminium with a dremel turned out to be harder than I
anticipated, but with some struggle, I got all four holes for the
servo, and the accompanying mounting holes done, and then painted the
enclosure with black spray paint to make all the scratches less
obvious.&lt;/p&gt;
&lt;img alt="projects/project-191383/images/4597261718835314447.JPG" src="projects/project-191383/images/4597261718835314447.JPG" /&gt;
&lt;p&gt;As for the legs, I was planning to cut them from 3mm sheet aluminium
again, but then I realized that some of the usual PCB fabs also let
you order CNC cut parts. Initially I tried three of them, but with the
pricing they showed, I started preparing the hacksaw.&lt;/p&gt;
&lt;img alt="projects/project-191383/images/1935491718835442162.JPG" src="projects/project-191383/images/1935491718835442162.JPG" /&gt;
&lt;p&gt;But then I thought about the fact that they also do bead-blasting and
anodizing of the parts. I imagined nice red anodized aluminium legs,
and I went to try some more fabs. One of the offered to make the parts
for 1/3 of the price of the others, and that is acceptable for me for
a one-off project, so I ended up ordering the parts anyways.&lt;/p&gt;
&lt;p&gt;They wanted step files, so I took this opportunity to learn to use
FreeCAD a little bit…&lt;/p&gt;
&lt;img alt="projects/project-191383/images/704231718835566061.png" src="projects/project-191383/images/704231718835566061.png" /&gt;
&lt;p&gt;I know, I know, this is horrible. But it’s the step file that counts
in the end. With the leg parts ordered and scheduled to arrive in some
two weeks, I got to work on the electronics.&lt;/p&gt;
&lt;p&gt;I don’t need anything too fancy here. I wanted to use the pi pico, to
have enough extra pins for things like speakers, blinking LEDs, extra
moving parts and so on. I considered using a 3S lipo battery pack, but
it’s considerably heavier than the 2 18650 batteries I used
previously, so I kept those. I looked at the buck converter chips
available, but I didn’t find anything that would be much better than
just using a ready buck module, so I just left holes to connect that.
The rest is simple: power switch, servo sockets, and a shottky diode
for the pi pico VSYS (I might replace it with a different diode with a
larger voltage drop, to raise the voltage for the servos).&lt;/p&gt;
&lt;img alt="projects/project-191383/images/4118001718836070859.png" src="projects/project-191383/images/4118001718836070859.png" /&gt;
&lt;p&gt;Just in case, I made the PCB shaped just like the body of the robot in &lt;a class="reference internal" href="../projects/project-188909/#project-188909"&gt;&lt;span class="std std-ref"&gt;Wee Bug&lt;/span&gt;&lt;/a&gt; and &lt;a class="reference internal" href="../projects/project-180025/#project-180025"&gt;&lt;span class="std std-ref"&gt;Fluffbug&lt;/span&gt;&lt;/a&gt; , so that if the aluminium case proves to be too heavy or otherwise
problematic, I can revert to the taped garbage looks. I moved the
batteries to both sides of the PCB to make the weight more evenly
distributed, and I added a bunch of break-off parts for attaching the
servos.&lt;/p&gt;
&lt;p&gt;Now with the PCB and the leg parts on order, all we have to do is
wait.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-191383/log-230608/" rel="alternate"/>
    <summary>Published on 2024-06-20 in project-191383.</summary>
    <published>2024-06-20T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-185291/log-230707/</id>
    <title>Practicality Beats Purity</title>
    <updated>2024-06-23T00:00:00+02:00</updated>
    <content type="html">&lt;section id="practicality-beats-purity"&gt;

&lt;p&gt;Published on 2024-06-23 in &lt;a class="reference internal" href="../projects/project-185291/#project-185291"&gt;&lt;span class="std std-ref"&gt;PewPew LCD&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It’s been a while since the last update in this project, but that
doesn’t mean nothing was happening. In fact, the whole project got a
complete overhaul, as I reevaluated the goals and the methods of
reaching them.&lt;/p&gt;
&lt;p&gt;I went back all the way to the &lt;a class="reference internal" href="../projects/project-165032/#project-165032"&gt;&lt;span class="std std-ref"&gt;PewPew M4&lt;/span&gt;&lt;/a&gt; design, including standard thickness PCB, a micro-USB socket that is
not made out of the PCB, and a plastic battery holder for two AAA
batteries. And physical buttons. I also changed the display to a
ST7735, 180x128, 1.8” color TFT.&lt;/p&gt;
&lt;p&gt;Why such sudden changes? Well, the short answer is: because I need a
reliable, working, non-experimental device that can be easily produced
at scale for workshops right now. The long answer requires me to fill
in some details.&lt;/p&gt;
&lt;p&gt;First of all, all the cool features like the USB port and battery
holder made of PCB itself require a thin 0.6mm PCB. Which is usually
more expensive, not available in colors, or not available for assembly
with PNP machines. Or all three. So I dropped all that in order to be
able to use the cheapest assembly options out there.&lt;/p&gt;
&lt;p&gt;Second, while the Nokia display is very reasonably priced at 1$, and
it gives us all a warm feeling reusing old parts that would rot in the
warehouse somewhere otherwise, it’s problematic, because you can’t
have to buy it separately and solder onto all the consoles yourself.
And no, you can’t use a connector, because you can’t buy matching
connectors. On the other hand, ST7735 displays go for $2, are bigger,
have better contrast, better support in software and will be around
for a while yet. And surprise surprise, they also come from old
(though slightly more recent) Nokia phones.&lt;/p&gt;
&lt;p&gt;Third, and this is entirely my fault, I can’t get the touch buttons
working reliably. The problem is that I’m only checking them when the
keys are checked in the game loop. And at 12 or even 6 FPS, that is
not often enough. So they feel unreliable and laggy. I would need to
write a version of the keypad library for CircuitPython that checks
them in the background (or uses interrupts), and I made an attempt at
this, but I’m blocked by the proprietary qtouch library that the
SAMD21 uses. So I accepted the additional cost and went back to
physical buttons. I found tact switches that are clicky but have low
actuation power, and they feel great.&lt;/p&gt;
&lt;p&gt;I’m now in the process of assembling 50 units for a workshop I will be
running in two weeks. Wish me luck.&lt;/p&gt;
&lt;img alt="projects/project-185291/images/6344511719177304495.jpg" src="projects/project-185291/images/6344511719177304495.jpg" /&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-185291/log-230707/" rel="alternate"/>
    <summary>Published on 2024-06-23 in project-185291.</summary>
    <published>2024-06-23T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-191383/log-230744/</id>
    <title>The PCB Body</title>
    <updated>2024-06-24T00:00:00+02:00</updated>
    <content type="html">&lt;section id="the-pcb-body"&gt;

&lt;p&gt;Published on 2024-06-24 in &lt;a class="reference internal" href="../projects/project-191383/#project-191383"&gt;&lt;span class="std std-ref"&gt;Bigbug&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The PCBs arrived (is it just me or are they really getting faster
recently?) today.&lt;/p&gt;
&lt;img alt="projects/project-191383/images/1569411719257885095.JPG" src="projects/project-191383/images/1569411719257885095.JPG" /&gt;
&lt;p&gt;And I assembled one, just to see how it all fits together.&lt;/p&gt;
&lt;img alt="projects/project-191383/images/9389941719257946353.JPG" src="projects/project-191383/images/9389941719257946353.JPG" /&gt;
&lt;p&gt;Apart from the fact that the switch works in reverse (on is down),
everything is pretty much as expected. I used nylon screws to save a
bit on on weight (and because they are black and look better).&lt;/p&gt;
&lt;p&gt;Now I’m only waiting for the legs. They should be fabricated next
week, and we will see if they arrive before I travel.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-191383/log-230744/" rel="alternate"/>
    <summary>Published on 2024-06-24 in project-191383.</summary>
    <published>2024-06-24T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-191383/log-231040/</id>
    <title>The Legs</title>
    <updated>2024-07-03T00:00:00+02:00</updated>
    <content type="html">&lt;section id="the-legs"&gt;

&lt;p&gt;Published on 2024-07-03 in &lt;a class="reference internal" href="../projects/project-191383/#project-191383"&gt;&lt;span class="std std-ref"&gt;Bigbug&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It took a while (because I picked the cheap and slow option), but the
leg parts finally arrived.&lt;/p&gt;
&lt;img alt="projects/project-191383/images/6053351720028992851.jpg" src="projects/project-191383/images/6053351720028992851.jpg" /&gt;
&lt;p&gt;They look great: 3mm thick anodized aluminium. Very solid and pretty
light too. So I assembled the robot with the PCB body first, just to
see how it all looks like:&lt;/p&gt;
&lt;img alt="projects/project-191383/images/1759941720029078902.jpg" src="projects/project-191383/images/1759941720029078902.jpg" /&gt;
&lt;p&gt;Turns out that those servos are really beefy. In fact, they are so
strong and fast, that my lazy code, which tells them too move from one
end to the other when making a step, makes them draw so much current
that the 8/15A regulator shuts down. This is more of a software
problem, though, than hardware — the power is perfectly adequate when
the servos are moving more gradually and don’t make sudden movements
all at once. There is also a problem that I already noticed in the
first version of Big Bug, that is even more pronounced now with the
longer legs — the robot is tilted to one side for some reason. I
initially thought that it’s because the servos have asymmetric
response to the PWM signal, moving faster in one direction than in the
other, but then the difference would be between diagonal legs, and
it’s clearly a left/right asymmetry. I will need to investigate that
closer.&lt;/p&gt;
&lt;p&gt;With the initial tests done, I proceeded to move the robot to its
proper aluminium body.&lt;/p&gt;
&lt;img alt="projects/project-191383/images/7773551720029405627.jpg" src="projects/project-191383/images/7773551720029405627.jpg" /&gt;
&lt;p&gt;I used one more spare PCB from the PCB body, but I cut off the
mechanical part to which the servos were attached, so that it will fit
inside the case better. I also experimented with several different
buck converters, but in the end settled on the 8/16A one that I used
initially. I ordered a few more to try later, too, so I might still
change it.&lt;/p&gt;
&lt;p&gt;The total weight of the whole robot is just shy of 1kg, which is not
too bad. I might actually make it even less by replacing the case lids
with PCBs (I don’t feel like drilling all the holes for the power
switch and USB in the original lids), and using a smaller battery.&lt;/p&gt;
&lt;p&gt;I drilled the holes on the sides for the servo cables, added some
plastic cable management thingies, wrapped some rubber strings on the
feet, and closed the lid:&lt;/p&gt;
&lt;img alt="projects/project-191383/images/8654621720029703398.jpg" src="projects/project-191383/images/8654621720029703398.jpg" /&gt;
&lt;p&gt;Now all that is remaining is, as always, programming. And waiting for
the additional parts.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-191383/log-231040/" rel="alternate"/>
    <summary>Published on 2024-07-03 in project-191383.</summary>
    <published>2024-07-03T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-178061/log-231499/</id>
    <title>S3 with a Module</title>
    <updated>2024-07-25T00:00:00+02:00</updated>
    <content type="html">&lt;section id="s3-with-a-module"&gt;

&lt;p&gt;Published on 2024-07-25 in &lt;a class="reference internal" href="../projects/project-178061/#project-178061"&gt;&lt;span class="std std-ref"&gt;PewPew S2&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I finally gave up on the parallel display. It seems that something in
IDF is broken again, and since it’s broken now, even if it gets fixed,
chances are that it will break again. I can instead stick to what is
working reliably, especially since the ESP32 can do very fast SPI
clocks, and that might be even faster than the parallel protocol.&lt;/p&gt;
&lt;p&gt;In any case, I designed that board with a WROOM module, using the SPI
display, a LiPo battery with a charging circuit, and a bunch of other
extra features: backlight control, battery monitoring, a light sensor,
and all the unused pins broken out to a connector on the back.&lt;/p&gt;
&lt;img alt="projects/project-178061/images/9536251721943151898.png" src="projects/project-178061/images/9536251721943151898.png" /&gt;
&lt;p&gt;I assumed the popular Nokia BL-5C battery, but I also found some very
thin (3mm) pouch batteries of the same size, so I’m going to use those
in my prototypes. I still need to figure out some way to hold the
battery in place, and maybe some pogo pins for the battery connector.
For now it’s held by some masking tape.&lt;/p&gt;
&lt;img alt="projects/project-178061/images/4568981721943341933.jpg" src="projects/project-178061/images/4568981721943341933.jpg" /&gt;
&lt;p&gt;I like the thin pouch battery, because it makes the whole console
almost completely flat:&lt;/p&gt;
&lt;img alt="projects/project-178061/images/4266341721943388017.jpg" src="projects/project-178061/images/4266341721943388017.jpg" /&gt;
&lt;p&gt;As for the software, there were no problems. I prepared a board
definition for CircuitPython, with 16MB flash and 8MB of PSRAM, and
the Stage library enabled. I even added the display initialization to
the firmware. Flashing is easy, because the BOOT button is the X
button, like in the previous version. It worked at the first try.&lt;/p&gt;
&lt;img alt="projects/project-178061/images/573811721943533443.jpg" src="projects/project-178061/images/573811721943533443.jpg" /&gt;
&lt;p&gt;The power switch is only for the battery power — connecting the USB
always turns the device on, and always charges the battery. It was
easier to do it that way, though it might be annoying if you wanted to
just charge it without switching it on.&lt;/p&gt;
&lt;p&gt;As I said, I still don’t know how I will solve the battery cover. For
now I attached the PCB of one of the old prototypes on the back, and
that seems to work pretty well. I might do something similar in the
final version.&lt;/p&gt;
&lt;img alt="projects/project-178061/images/6974671721943780003.jpg" src="projects/project-178061/images/6974671721943780003.jpg" /&gt;
&lt;p&gt;I still have some nicer machine screws and washers on order – I should
be able to control the spacing of the layers better with those.&lt;/p&gt;
&lt;p&gt;I’m also still not entirely happy with the buttons and the d-pad. I
want to experiment with 3D printing them, but for that I would have to
refresh my OpenSCAD skills a bit, and possibly order a whole bunch of
prototypes to be printed, since I don’t have a 3D printer myself. It
might take a lot of back-and-forth to get the spacing right.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-178061/log-231499/" rel="alternate"/>
    <summary>Published on 2024-07-25 in project-178061.</summary>
    <published>2024-07-25T00:00:00+02:00</published>
  </entry>
</feed>
