<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>http://deshipu.art/</id>
  <title>deshipu.art</title>
  <updated>2025-01-16T14:36:28.914279+00:00</updated>
  <link href="http://deshipu.art/"/>
  <link href="http://deshipu.art/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.33">ABlog</generator>
  <entry>
    <id>http://deshipu.art/projects/project-188908/log-1/</id>
    <title>Designs Published</title>
    <updated>2024-10-21T00:00:00+02:00</updated>
    <content type="html">&lt;section class="tex2jax_ignore mathjax_ignore" id="designs-published"&gt;

&lt;p&gt;Published on 2024-10-21 in &lt;a class="reference internal" href="../projects/project-188908/#project-188908"&gt;&lt;span class="std std-ref"&gt;Moo Bug&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I just realized that for all this time I forgot to publish the designs files
for this robot, even though I even sold some kits of it to people at the
Hackaday Europe. I guess they were all too nice to ask me where they are.&lt;/p&gt;
&lt;p&gt;In any case, both the design files and the basic walking code are now available
in a &lt;a class="reference external" href="https://github.com/auto-bug/moobug"&gt;repository&lt;/a&gt; on Github. Write me an
e-mail or create an issue if you see anything missing or wrong. The JSON files
are EasyEDA (standard) exports.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-188908/log-1/" rel="alternate"/>
    <summary>Published on 2024-10-21 in project-188908.</summary>
    <published>2024-10-21T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-sharp-gadget/log-1/</id>
    <title>Off to a rough start</title>
    <updated>2025-01-15T00:00:00+01:00</updated>
    <content type="html">&lt;section class="tex2jax_ignore mathjax_ignore" id="off-to-a-rough-start"&gt;

&lt;p&gt;Published on 2025-01-15 in &lt;a class="reference internal" href="../projects/project-sharp-gadget/#project-sharp-gadget"&gt;&lt;span class="std std-ref"&gt;Sharp Gadget&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first version of the PCB didn’t work, for the very simple reason that I
inverted the display connector. I did obsess about its orientation a bit,
changing it several times, and finally settled on the one that is wrong. Oh
well. I immediately fixed the design, and also added a power switch that cuts
off the battery connector, because it seems I’m more likely to use this with
a battery.&lt;/p&gt;
&lt;p&gt;I worked on other things while waiting for the new PCB, so it wasn’t really
much of a waste of time.&lt;/p&gt;
&lt;p&gt;With the connector in the right orientation, the display switched on with some
random pattern of pixels on it. And that’s when I had a second surprise: the
pixels are color. It was supposed to be a LS013B7DH03 display, but apparently I
got LS013B7DH06 instead! Well, I can live with that. They use the same
connector and the same protocol.&lt;/p&gt;
&lt;img alt="New version of the PCB with the display showing random pixels." src="../_images/IMG_20250113_132342_HDR.jpg" /&gt;
&lt;p&gt;I proceeded to try to use that display with CircuitPython. Earlier, I noticed that it already has a &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;sharpdisplay&lt;/span&gt;&lt;/code&gt; module, so I expected this to be just a
question of using it with the right options. It doesn’t seem to be the case.
There is precious little documentation, but it seems that it was written for some other sharp displays with a different protocol. Oh well, I will just have to write the driver myself.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-sharp-gadget/log-1/" rel="alternate"/>
    <summary>Published on 2025-01-15 in project-sharp-gadget.</summary>
    <published>2025-01-15T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-bluejoy/log-5/</id>
    <title>Second prototype</title>
    <updated>2025-01-15T00:00:00+01:00</updated>
    <content type="html">&lt;section class="tex2jax_ignore mathjax_ignore" id="second-prototype"&gt;

&lt;p&gt;Published on 2025-01-15 in &lt;a class="reference internal" href="../projects/project-bluejoy/#project-bluejoy"&gt;&lt;span class="std std-ref"&gt;BlueJoy&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I actually received the PCBs and assembled and tested the second prototype a while ago, but I never had the time to update the logs. So here it is.&lt;/p&gt;
&lt;img alt="The new bluejoy module next to a xiao board" src="../_images/IMG_20241030_163544_HDR.jpg" /&gt;
&lt;p&gt;This time it was pretty unexciting. It just works. As you can see on the photo,
it’s using the ESP32-MINI-1 module, that is a bit bigger, but also cheaper,
since it doesn’t have the extra memory that we don’t need. The programming pads
had to go on the bottom of the board, because this module is slightly longer,
but that’s not a big problem.&lt;/p&gt;
&lt;p&gt;I programmed it and it just works, so that’s it.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-bluejoy/log-5/" rel="alternate"/>
    <summary>Published on 2025-01-15 in project-bluejoy.</summary>
    <published>2025-01-15T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-sharp-gadget/</id>
    <title>Sharp Gadget</title>
    <updated>2025-01-15T00:00:00+01:00</updated>
    <content type="html">&lt;section class="tex2jax_ignore mathjax_ignore" id="sharp-gadget"&gt;

&lt;p&gt;Handheld device with a sharp display.&lt;/p&gt;
&lt;div class="project-thumb"&gt;
&lt;a class="reference external image-reference" href="/_images/IMG_20241231_194120_HDR.jpg"&gt;&lt;img alt="../_images/thumb-IMG_20241231_194120_HDR.jpg" src="../_images/thumb-IMG_20241231_194120_HDR.jpg" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;I got my hands on a bunch of those cool SHARP memory displays, and I decided to
make a simple device to test them. The device is pretty generic: it has the
display, of course, three buttons on the sides, some i2c connectors, footprint
for a xiao dev board, and a power switch and pads for connecting a lipo
battery.&lt;/p&gt;
&lt;p&gt;The goal here is to test the display, and maybe make something like a
tamagotchi with it.&lt;/p&gt;
&lt;section id="logs"&gt;
&lt;h2&gt;Logs&lt;/h2&gt;
&lt;ul class="postlist-style-none postlist simple"&gt;
&lt;li class="ablog-post"&gt;&lt;p class="ablog-post-title"&gt;2025-01-15 - &lt;a class="reference internal" href="../projects/project-sharp-gadget/log-1/"&gt;Off to a rough start&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-sharp-gadget/" rel="alternate"/>
    <summary>Handheld device with a sharp display.</summary>
    <category term="hardware" label="hardware"/>
    <category term="ongoingproject" label="ongoing project"/>
    <published>2025-01-15T00:00:00+01:00</published>
  </entry>
  <entry>
    <id>http://deshipu.art/projects/project-192761/log-223770/</id>
    <title>Dupe SAO</title>
    <updated>2025-01-16T00:00:00+01:00</updated>
    <content type="html">&lt;section class="tex2jax_ignore mathjax_ignore" id="dupe-sao"&gt;

&lt;p&gt;Published on 2025-01-16 in &lt;a class="reference internal" href="../projects/project-192761/#project-192761"&gt;&lt;span class="std std-ref"&gt;Astro-chan Badge&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have been recently experimenting with different round displays and with the
CH32V series of microcontrollers, and I decided to make another try at this
idea, this time as a badge add-on.&lt;/p&gt;
&lt;p&gt;I also decided to try and reproduce the look of duplicants from the game Oxygen
Not Included. The publisher of that game might not be happy with me about this,
but I don’t plan to sell or otherwise distribute this thing, so it should be
fine.&lt;/p&gt;
&lt;img alt="Duplicant SAO." src="../_images/IMG_20250113_114025_HDR.jpg" /&gt;
&lt;p&gt;It’s not just new display and new PCB, I’m also using a RISC-V based chip,
CH32V203 for the brains of this contraption. The original plan was to get the
USB MSC example working, and join it with a GIF decoding library, so that you
can just upload arbitrary GIF files to the device and have them play
automatically. It turns out that this particular chip doesn’t have enough RAM
to pull that off, so I’m just going to hard-code the graphics in the firmware,
but I still want to get that idea working in a different project with a
different chip.&lt;/p&gt;
&lt;p&gt;Right now the project is waiting for a CHLINK-E programmer to arrive, so that I
can flash the firmware on a new chip. I have tested it already on a development
board that has a USB bootloader, but of course bare chips don’t come with a
bootloader, so I will need that programmer.&lt;/p&gt;
&lt;/section&gt;
</content>
    <link href="http://deshipu.art/projects/project-192761/log-223770/" rel="alternate"/>
    <summary>Published on 2025-01-16 in project-192761.</summary>
    <published>2025-01-16T00:00:00+01:00</published>
  </entry>
</feed>
